%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/dmccusker/remote/oldResults/output/MSD1024Array8/run44/eps/vaf.eps
%%Creator: gnuplot 4.6 patchlevel 2
%%CreationDate: Wed Oct  4 18:22:21 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/dmccusker/remote/oldResults/output/MSD1024Array8/run44/eps/vaf.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 2)
  /Author (dmccusker)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Oct  4 18:22:21 2017)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1220 1640 M
63 0 V
5556 0 R
-63 0 V
stroke
1100 1640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-3e-05)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1220 2107 M
63 0 V
5556 0 R
-63 0 V
stroke
1100 2107 M
[ [(Helvetica) 200.0 0.0 true true 0 (-2e-05)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1220 2573 M
63 0 V
5556 0 R
-63 0 V
stroke
1100 2573 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1e-05)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1220 3040 M
63 0 V
5556 0 R
-63 0 V
stroke
1100 3040 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1220 3506 M
63 0 V
5556 0 R
-63 0 V
stroke
1100 3506 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1e-05)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1220 3972 M
63 0 V
5556 0 R
-63 0 V
stroke
1100 3972 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2e-05)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1220 4439 M
63 0 V
5556 0 R
-63 0 V
stroke
1100 4439 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3e-05)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1220 1640 M
0 63 V
0 2736 R
0 -63 V
stroke
1220 1440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1844 1640 M
0 63 V
0 2736 R
0 -63 V
stroke
1844 1440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1e+07)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2469 1640 M
0 63 V
0 2736 R
0 -63 V
stroke
2469 1440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2e+07)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3093 1640 M
0 63 V
0 2736 R
0 -63 V
stroke
3093 1440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3e+07)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3717 1640 M
0 63 V
0 2736 R
0 -63 V
stroke
3717 1440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4e+07)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4342 1640 M
0 63 V
0 2736 R
0 -63 V
stroke
4342 1440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5e+07)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4966 1640 M
0 63 V
0 2736 R
0 -63 V
stroke
4966 1440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 6e+07)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5590 1640 M
0 63 V
0 2736 R
0 -63 V
stroke
5590 1440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 7e+07)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6215 1640 M
0 63 V
0 2736 R
0 -63 V
stroke
6215 1440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 8e+07)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6839 1640 M
0 63 V
0 2736 R
0 -63 V
stroke
6839 1440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 9e+07)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1220 4439 N
0 -2799 V
5619 0 V
0 2799 V
-5619 0 V
Z stroke
LCb setrgbcolor
160 3039 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (<\(v\()]
[(Symbol) 200.0 0.0 true true 0 (t)]
[(Helvetica) 200.0 0.0 true true 0 (\).v\(0\)\))]
[(Helvetica) 160.0 100.0 true true 0 (2)]
[(Helvetica) 200.0 0.0 true true 0 (>)]
] -86.7 MCshow
grestore
LTb
LCb setrgbcolor
4029 1140 M
[ [(Helvetica) 200.0 0.0 true true 0 (lagtime [steps])]
] -66.7 MCshow
LTb
4029 4739 M
[ [(Helvetica) 200.0 0.0 true true 0 (velocity autocorrelation function)]
] -66.7 MCshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
3.000 UL
LT1
LCb setrgbcolor
3338 63 N
0 800 V
1382 0 V
0 -800 V
3338 63 L
Z stroke
% Begin plot #1
1.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
3938 463 M
[ [(Helvetica) 200.0 0.0 true true 0 (run44)]
] -66.7 MRshow
LT0
4058 463 M
543 0 V
1228 3000 M
8 -89 V
8 393 V
8 183 V
8 -291 V
8 33 V
8 -376 V
8 569 V
8 -157 V
8 -390 V
8 275 V
8 18 V
8 -135 V
8 259 V
8 -159 V
8 -517 V
8 1024 V
8 -453 V
8 -562 V
8 175 V
8 95 V
8 315 V
8 -380 V
8 -72 V
8 420 V
8 -314 V
8 301 V
8 412 V
8 -541 V
8 252 V
8 -43 V
8 -459 V
8 632 V
8 -488 V
8 356 V
8 -504 V
8 448 V
8 -402 V
8 344 V
8 96 V
8 -153 V
8 -115 V
8 72 V
8 74 V
8 -188 V
8 -24 V
8 174 V
8 139 V
8 -213 V
8 -54 V
8 -176 V
8 69 V
8 -56 V
8 22 V
8 282 V
8 -348 V
8 319 V
8 -140 V
7 -130 V
8 179 V
8 260 V
8 -464 V
8 199 V
8 -518 V
8 625 V
8 -376 V
8 502 V
8 -276 V
8 127 V
8 -489 V
8 -37 V
8 418 V
8 92 V
8 -516 V
8 500 V
8 262 V
8 80 V
8 -224 V
8 -546 V
8 351 V
8 -68 V
8 -50 V
8 401 V
8 -362 V
8 60 V
8 464 V
8 62 V
8 -534 V
8 63 V
8 -298 V
8 -385 V
8 1139 V
8 -389 V
8 282 V
8 -322 V
8 35 V
8 -304 V
8 264 V
8 252 V
8 -177 V
8 365 V
8 -641 V
8 364 V
stroke 2043 3192 M
8 -114 V
8 -245 V
8 -25 V
8 376 V
8 -19 V
8 -118 V
8 -86 V
8 49 V
8 49 V
8 -165 V
8 85 V
8 55 V
8 -394 V
8 448 V
8 -440 V
8 381 V
8 490 V
8 -231 V
8 -710 V
8 658 V
8 -426 V
8 184 V
8 73 V
8 444 V
8 -644 V
8 861 V
8 -669 V
8 -234 V
8 -74 V
8 404 V
8 89 V
8 -118 V
8 182 V
8 -386 V
8 120 V
8 6 V
8 -223 V
8 200 V
8 592 V
8 -595 V
8 97 V
8 -226 V
8 -314 V
8 696 V
8 -129 V
8 -244 V
8 44 V
8 98 V
8 254 V
8 -652 V
8 163 V
8 342 V
8 -313 V
8 239 V
8 -293 V
8 269 V
8 -98 V
8 381 V
8 -27 V
8 -294 V
8 314 V
8 -1086 V
8 928 V
8 177 V
8 -297 V
8 522 V
8 -987 V
8 148 V
8 526 V
8 356 V
8 -1182 V
8 676 V
7 -130 V
8 -3 V
8 -19 V
8 0 V
8 68 V
8 4 V
8 -389 V
8 464 V
8 -216 V
8 407 V
8 -513 V
8 172 V
8 -35 V
8 464 V
8 -252 V
8 -109 V
8 204 V
8 -244 V
8 90 V
8 291 V
8 -164 V
8 -195 V
8 233 V
8 119 V
8 -361 V
8 -16 V
8 79 V
8 -85 V
8 -6 V
8 404 V
8 -470 V
8 -63 V
stroke 2874 2839 M
8 472 V
8 -372 V
8 232 V
8 215 V
8 -389 V
8 337 V
8 -154 V
8 161 V
8 -676 V
8 578 V
8 -61 V
8 -317 V
8 -288 V
8 -113 V
8 433 V
8 115 V
8 -95 V
8 -416 V
8 850 V
8 -214 V
8 -333 V
8 300 V
8 156 V
8 -632 V
8 686 V
8 -242 V
8 206 V
8 -448 V
8 -194 V
8 309 V
8 534 V
8 -490 V
8 295 V
8 -324 V
8 -46 V
8 63 V
8 -10 V
8 406 V
8 -515 V
8 327 V
8 -189 V
8 5 V
8 359 V
8 -76 V
8 -248 V
8 -49 V
8 -311 V
8 232 V
8 289 V
8 -334 V
8 -196 V
8 -32 V
8 103 V
8 343 V
8 -80 V
8 -122 V
8 84 V
8 -434 V
8 688 V
8 84 V
8 -263 V
8 -421 V
8 692 V
8 120 V
8 -497 V
8 -258 V
8 321 V
8 -26 V
8 163 V
8 -583 V
8 782 V
8 -170 V
8 -325 V
8 200 V
8 -57 V
8 242 V
8 -355 V
8 -475 V
8 666 V
8 -346 V
8 817 V
8 -413 V
8 -356 V
8 -134 V
8 263 V
7 141 V
8 102 V
8 -216 V
8 245 V
8 -289 V
8 242 V
8 182 V
8 -129 V
8 -135 V
8 339 V
8 -475 V
8 -249 V
8 373 V
8 -149 V
8 -429 V
8 1298 V
8 -474 V
8 -360 V
8 507 V
stroke 3705 3412 M
8 -355 V
8 -197 V
8 40 V
8 371 V
8 50 V
8 -26 V
8 190 V
8 -573 V
8 237 V
8 342 V
8 -69 V
8 -147 V
8 -268 V
8 -105 V
8 101 V
8 -239 V
8 840 V
8 -866 V
8 426 V
8 -452 V
8 217 V
8 110 V
8 -309 V
8 508 V
8 27 V
8 -378 V
8 991 V
8 -761 V
8 -315 V
8 549 V
8 -395 V
8 -214 V
8 162 V
8 99 V
8 -109 V
8 512 V
8 -403 V
8 80 V
8 69 V
8 -64 V
8 243 V
8 -169 V
8 -87 V
8 155 V
8 -52 V
8 -306 V
8 -99 V
8 198 V
8 257 V
8 -535 V
8 60 V
8 517 V
8 -343 V
8 252 V
8 -22 V
8 -309 V
8 -109 V
8 72 V
8 331 V
8 202 V
8 -798 V
8 286 V
8 125 V
8 534 V
8 -86 V
8 -1053 V
8 1001 V
8 -49 V
8 -147 V
8 -148 V
8 -227 V
8 382 V
8 -307 V
8 385 V
8 4 V
8 -154 V
8 -283 V
8 337 V
8 -376 V
8 144 V
8 1194 V
8 -1093 V
8 -311 V
8 536 V
8 -32 V
8 276 V
8 -112 V
8 -333 V
8 120 V
8 -455 V
8 -564 V
8 1165 V
8 -97 V
8 142 V
8 -219 V
8 -295 V
8 660 V
8 -230 V
8 -492 V
7 153 V
8 397 V
8 -261 V
8 185 V
8 177 V
stroke 4536 3425 M
8 -196 V
8 176 V
8 -671 V
8 992 V
8 -673 V
8 -84 V
8 460 V
8 -746 V
8 511 V
8 -434 V
8 150 V
8 252 V
8 148 V
8 215 V
8 -713 V
8 720 V
8 -494 V
8 486 V
8 172 V
8 -1495 V
8 520 V
8 823 V
8 -286 V
8 -164 V
8 236 V
8 -95 V
8 -294 V
8 -141 V
8 482 V
8 -616 V
8 -235 V
8 532 V
8 711 V
8 -300 V
8 365 V
8 -493 V
8 -392 V
8 291 V
8 137 V
8 -106 V
8 -89 V
8 83 V
8 -377 V
8 1012 V
8 -790 V
8 379 V
8 -521 V
8 -348 V
8 -86 V
8 74 V
8 24 V
8 972 V
8 -51 V
8 -987 V
8 294 V
8 -120 V
8 -130 V
8 621 V
8 -127 V
8 349 V
8 -573 V
8 353 V
8 22 V
8 88 V
8 -159 V
8 -117 V
8 -312 V
8 -313 V
8 1133 V
8 -86 V
8 -899 V
8 -23 V
8 580 V
8 249 V
8 -299 V
8 482 V
8 -872 V
8 722 V
8 -782 V
8 37 V
8 705 V
8 -40 V
8 -220 V
8 -105 V
8 -578 V
8 -28 V
8 216 V
8 1436 V
8 -1108 V
8 454 V
8 -244 V
8 432 V
8 -545 V
8 -88 V
8 682 V
8 -522 V
8 -446 V
8 1246 V
8 -1060 V
8 365 V
8 -380 V
8 561 V
8 -536 V
8 452 V
stroke 5368 3238 M
8 37 V
8 -241 V
8 77 V
8 -290 V
8 8 V
8 174 V
8 -81 V
8 825 V
7 -1731 V
8 1334 V
8 -1347 V
8 946 V
8 317 V
8 -1311 V
8 1156 V
8 -240 V
8 1112 V
8 -1218 V
8 -289 V
8 542 V
8 -11 V
8 107 V
8 -1023 V
8 1275 V
8 -217 V
8 -550 V
8 -522 V
8 816 V
8 386 V
8 508 V
8 -228 V
8 -129 V
8 249 V
8 -204 V
8 -560 V
8 -219 V
8 192 V
8 -80 V
8 36 V
8 183 V
8 459 V
8 -1275 V
8 1281 V
8 58 V
8 -749 V
8 299 V
8 -228 V
8 996 V
8 -1243 V
8 1287 V
8 -1159 V
8 38 V
8 435 V
8 -795 V
8 18 V
8 680 V
8 -204 V
8 132 V
8 -403 V
8 337 V
8 459 V
8 -147 V
8 -493 V
8 -87 V
8 516 V
8 -407 V
8 420 V
8 -1416 V
8 1334 V
8 572 V
8 -1303 V
8 882 V
8 -576 V
8 -765 V
8 1020 V
8 445 V
8 -582 V
8 343 V
8 -1207 V
8 833 V
8 99 V
8 960 V
8 -1036 V
8 -572 V
8 838 V
8 -291 V
8 252 V
8 -417 V
8 331 V
8 292 V
8 -823 V
8 -594 V
8 1663 V
8 613 V
8 -1432 V
8 444 V
8 1258 V
8 -706 V
8 -1202 V
8 586 V
8 -263 V
8 1094 V
8 -1249 V
8 -185 V
stroke 6199 2492 M
8 932 V
8 -841 V
8 322 V
8 1225 V
8 -439 V
8 -639 V
8 255 V
8 -752 V
8 -25 V
8 767 V
8 -839 V
8 521 V
8 8 V
8 33 V
8 387 V
8 -395 V
8 -691 V
8 78 V
8 235 V
8 67 V
8 1235 V
7 -1630 V
8 631 V
8 189 V
8 -60 V
8 -349 V
8 307 V
% End plot #1
stroke
LTb
LCb setrgbcolor
1220 4439 N
0 -2799 V
5619 0 V
0 2799 V
-5619 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
